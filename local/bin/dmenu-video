#!/bin/bash
# Manage Internet videos. If taskspooler is installed, queue the links

# Prerequisites
if ! type streamlink mpv youtube-dl ffmpeg > /dev/null 2>&1; then notify-send "⚠️ Error" "youtube-dl, streamlink & ffmpeg must be installed" & exit 1; fi

# Determine queue software (optional)
if type ts > /dev/null 2>&1; then
	queue=ts
elif type tsp > /dev/null 2>&1; then
	queue=tsp
else
	queue=''
fi

# Grab the video/playlist link
link="$(if [[ -z "$1" ]]; then printf "%s" "$*" | dmenu -p 'Video/Playlist/Channel Link'; else printf "%s" "$1" ;fi)"
if [ -z "$link" ]; then exit 2; fi

# Variables
StreamlinkSupported="abematv\|abweb\|adultswim\|afreeca\|akamaihd\|albavision\|animelab\|app17\|ard_live\|ard_mediathek\|artetv\|atresplayer\|bbciplayer\|bfmtv\|bigo\|bilibili\|bloomberg\|booyah\|brightcove\|btv\|canalplus\|cbsnews\|cdnbg\|ceskatelevize\|cinergroup\|clubbingtv\|cnews\|crunchyroll\|dailymotion\|dash\|delfi\|deutschewelle\|dlive\|dogan\|dogus\|dommune\|drdk\|earthcam\|egame\|eltrecetv\|euronews\|facebook\|filmon\|foxtr\|funimationnow\|galatasaraytv\|gardenersworld\|garena\|goltelevision\|goodgame\|googledrive\|gulli\|hds\|hls\|http\|huajiao\|huomao\|huya\|idf1\|invintus\|kugou\|latina\|linelive\|live_russia_tv\|liveedu\|liveme\|livestream\|lrt\|ltv_lsm_lv\|mediaklikk\|mediavitrina\|mildom\|mitele\|mjunoon\|mrtmk\|n13tv\|nbc\|nbcnews\|nbcsports\|nhkworld\|nicolive\|nimotv\|nos\|nownews\|nrk\|ntv\|okru\|olympicchannel\|oneplusone\|onetv\|openrectv\|orf_tvthek\|periscope\|picarto\|piczel\|pixiv\|pluto\|pluzz\|powerapp\|qq\|radiko\|radionet\|raiplay\|reuters\|rotana\|rtbf\|rtlxl\|rtmp\|rtpplay\|rtve\|rtvs\|ruv\|sbscokr\|schoolism\|senategov\|showroom\|sportal\|sportschau\|ssh101\|stadium\|steam\|streamable\|streamingvideoprovider\|streann\|stv\|svtplay\|swisstxt\|teamliquid\|teleclubzoom\|telefe\|tf1\|tga\|theplatform\|tigerdile\|tlctr\|turkuvaz\|tv360\|tv3cat\|tv4play\|tv5monde\|tv8\|tv999\|tvibo\|tvp\|tvrby\|tvrplus\|tvtoya\|twitcasting\|twitch\|ustreamtv\|ustvnow\|viasat\|vidio\|vimeo\|vinhlongtv\|viutv\|vk\|vlive\|vrtbe\|vtvgo\|wasd\|webcast_india_gov\|webtv\|welt\|wwenetwork\|yupptv\|zattoo\|zdf_mediathek\|zeenews\|zengatv\|zhanqi"

# Actions
yt-listen(){
	if [ -z "$queue" ]; then
		if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --really-quiet' "$link" audio_only 2> /dev/null & disown ; else mpv --cache=yes --ytdl-format=bestaudio/best --really-quiet "$link" 2> /dev/null & disown ; fi
	else
		if grep -qw "$StreamlinkSupported" <<< "$link"; then "$queue" streamlink --player mpv --player-args '--cache=yes --really-quiet' "$link" audio_only 2> /dev/null & disown ; else "$queue" mpv --cache=yes --ytdl-format=bestaudio/best --really-quiet "$link" 2> /dev/null & disown ; fi
	fi
}
yt-wsd(){
	if [ -z "$queue" ]; then
		if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --title="mpv floating"' "$link" 480p 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=135+bestaudio/best --really-quiet --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	else
		if grep -qw "$StreamlinkSupported" <<< "$link"; then "$queue" streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --title="mpv floating"' "$link" 480p 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=135+bestaudio/best --really-quiet --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	fi
}
yt-wsdnow(){
	if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --title="mpv floating"' "$link" 480p 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=135+bestaudio/best --really-quiet --title="mpv floating" "$link" 2>/dev/null & disown ; fi
}
yt-whd(){
	if [ -z "$queue" ]; then
		if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --title="mpv floating"' "$link" best 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --ytdl-format=299+bestaudio/137+bestaudio/best --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	else
		if grep -qw "$StreamlinkSupported" <<< "$link"; then "$queue" streamlink --player mpv --player-args '--cache=yes --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --title="mpv floating"' "$link" best 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --ytdl-format=299+bestaudio/137+bestaudio/best --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	fi
}
yt-whdnow(){
	if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --title="mpv floating"' "$link" best 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --ytdl-format=299+bestaudio/137+bestaudio/best --title="mpv floating" "$link" 2>/dev/null & disown ; fi
}
yt-shufsd(){
	if [ -z "$queue" ]; then
		if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --ytdl --shuffle --title="mpv floating"' "$link" 480p 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=135+bestaudio/best --really-quiet --ytdl --shuffle --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	else
		if grep -qw "$StreamlinkSupported" <<< "$link"; then "$queue" streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --ytdl --shuffle --title="mpv floating"' "$link" 480p 2>/dev/null & disown ; else"$queue" mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=135+bestaudio/best --really-quiet --ytdl --shuffle --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	fi
}
yt-shufhd(){
	if [ -z "$queue" ]; then
		if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --ytdl --shuffle --title="mpv floating"' "$link" best 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=299+bestaudio/137+bestaudio/best --really-quiet --ytdl --shuffle --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	else
		if grep -qw "$StreamlinkSupported" <<< "$link"; then "$queue" streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --really-quiet --ytdl --shuffle --title="mpv floating"' "$link" best 2>/dev/null & disown ; else "$queue" mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=299+bestaudio/137+bestaudio/best --really-quiet --ytdl --shuffle --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	fi
}
yt-revsd(){
	if [ -z "$queue" ]; then
		if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-raw-options-append="playlist-reverse=" --really-quiet --title="mpv floating"' "$link" 480p 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=135+bestaudio/best --ytdl-raw-options-append="playlist-reverse=" --really-quiet --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	else
		if grep -qw "$StreamlinkSupported" <<< "$link"; then "$queue" streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-raw-options-append="playlist-reverse=" --really-quiet --title="mpv floating"' "$link" 480p 2>/dev/null & disown ; else "$queue" mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=135+bestaudio/best --ytdl-raw-options-append="playlist-reverse=" --really-quiet --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	fi
}
yt-revhd(){
	if [ -z "$queue" ]; then
		if grep -qw "$StreamlinkSupported" <<< "$link"; then streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-raw-options-append="playlist-reverse=" --really-quiet --title="mpv floating"' "$link" best 2>/dev/null & disown ; else mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=299+bestaudio/137+bestaudio/best --ytdl-raw-options-append="playlist-reverse=" --really-quiet --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	else
		if grep -qw "$StreamlinkSupported" <<< "$link"; then "$queue" streamlink --player mpv --player-args '--cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-raw-options-append="playlist-reverse=" --really-quiet --title="mpv floating"' "$link" best 2>/dev/null & disown ; else "$queue" mpv --cache=yes --ontop --no-border --force-window --autofit=352x240 --geometry=-15-15 --ytdl-format=299+bestaudio/137+bestaudio/best --ytdl-raw-options-append="playlist-reverse=" --really-quiet --title="mpv floating" "$link" 2>/dev/null & disown ; fi
	fi
}
yt-dlvideo(){
	notify-send " Video queued for download..."
	if [ -z "$queue" ]; then youtube-dl -ci --add-metadata --embed-thumbnail --embed-subs -f 299+bestaudio/137+bestaudio/best "$link" -o "$HOME"/Downloads/'%(uploader)s-%(upload_date)s-%(title)s-%(id)s.%(ext)s' 2> /dev/null & disown ; else "$queue" youtube-dl -ci -f 299+bestaudio/137+bestaudio/best --add-metadata --embed-thumbnail --embed-subs "$link" -o "$HOME"/Downloads/'%(uploader)s-%(upload_date)s-%(title)s-%(id)s.%(ext)s' 2> /dev/null & disown ; fi
}
yt-dlaudio(){
	notify-send " Audio queued for download..."
	if [ -z "$queue" ]; then youtube-dl -ci --add-metadata --extract-audio --audio-format mp3 --audio-quality 0 "$link" -o "$HOME"/Downloads/'%(uploader)s-%(upload_date)s-%(title)s-%(id)s.%(ext)s' 2> /dev/null & disown ; else "$queue" youtube-dl -ci --add-metadata --extract-audio --audio-format mp3 --audio-quality 0 "$link" -o "$HOME"/Downloads/'%(uploader)s-%(upload_date)s-%(title)s-%(id)s.%(ext)s' 2> /dev/null & disown ; fi
}

# Choose preferred video format
if [ -z "$queue" ]; then
	format="$(printf "%s\n" Listen 'Watch SD' 'Watch HD' 'Shuffle SD' 'Shuffle HD' 'Watch Reverse SD' 'Watch Reverse HD' Download 'Download Audio' 'Copy Link' 'Stop Playing' | dmenu -i -p 'Choose Action')"
	case "$format" in
		Listen) yt-listen ;;
		"Watch SD") yt-wsd ;;
		"Watch HD") yt-whd ;;
		"Shuffle SD") yt-shufsd ;;
		"Shuffle HD") yt-shufhd ;;
		"Watch Reverse SD") yt-revsd ;;
		"Watch Reverse HD") yt-revhd ;;
		Download) yt-dlvideo ;;
		"Download Audio") yt-dlaudio ;;
		"Copy Link") printf "%s" "$link" | tr -d '\n' | xclip -selection clipboard ; notify-send "📋 Link copied to clipboard" ;;
		"Stop Playing") pkill mpv ;;
	esac
else
	format="$(printf "%s\n" Listen 'Watch SD' 'Watch SD (no queue)' 'Watch HD' 'Watch HD (no queue)' 'Shuffle SD' 'Shuffle HD' 'Watch Reverse SD' 'Watch Reverse HD' Download 'Download Audio' 'Copy Link' 'Stop Playing' | dmenu -i -p 'Choose Action')"
	case "$format" in
		Listen) yt-listen ;;
		"Watch SD") yt-wsd ;;
		"Watch SD (no queue)") yt-wsdnow ;;
		"Watch HD") yt-whd ;;
		"Watch HD (no queue)") yt-whdnow ;;
		"Shuffle SD") yt-shufsd ;;
		"Shuffle HD") yt-shufhd ;;
		"Watch Reverse SD") yt-revsd ;;
		"Watch Reverse HD") yt-revhd ;;
		Download) yt-dlvideo ;;
		"Download Audio") yt-dlaudio ;;
		"Copy Link") printf "%s" "$link" | tr -d '\n' | xclip -selection clipboard ; notify-send "📋 Link copied to clipboard" ;;
		"Stop Playing") pkill mpv ;;
	esac
fi
exit 0
