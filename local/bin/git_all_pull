#!/bin/bash
#
# Author: Gaetan (gaetan@ictpourtous.com)
# Creation date: 27 April 2021
# Update date: N/A
# Version: 1.0
#
# Description: this script finds all Git repositories and pull the changes
#

#====================
# Print help if no input
#====================
if [[ -z "$1" ]]; then
	echo "
Missing argument: <PATH>

Usage: ./git_all_pull <PATH> (Example: ./git-all-pull \$HOME)
"
	exit 1
fi

#====================
# Variables
#====================
repositories="$(find $1 -type d -not \( -path */data -prune \) -not \( -path */.password-store -prune \) -not \( -path */Cloud -prune \) -not \( -path */.cache -prune \) -not \( -path */.emacs.d -prune \) -not \( -path */.config -prune \) -not \( -path */Downloads -prune \) -not \( -path */.vim -prune \) -name '.git' -printf '%h\n')"

#====================
# Pull repositories
#====================
for i in $repositories
do
	echo -e "GIT repository found in \"$i\"..."
	pull=$(mktemp)
	git -C "$i" pull &>"$pull"
	if grep -F 'Already up to date' "$pull" > /dev/null; then
		echo -e "\e[32mNothing to update\e[0m"
		echo -e
		rm -f "$pull" > /dev/null 2>&1
	elif grep 'Updating\|forced update' "$pull" > /dev/null; then
		echo -e "\e[33mUpstream has been updated\e[0m"
		echo -e "$(cat $pull)"
		echo -e
		rm -f "$pull" > /dev/null 2>&1
	else
		echo -e "\e[31mAn error occurred\e[0m"
		echo -e "$(cat $pull)"
		echo -e
		rm -f "$pull" > /dev/null 2>&1
	fi
done